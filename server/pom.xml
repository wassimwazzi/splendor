<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>hexanome-06</groupId>
    <artifactId>splendor</artifactId>
    <packaging>jar</packaging>
    <version>1.0</version>
    <name>splendorserver</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <source>8</source>
    </properties>

    <!-- main developer -->
    <developers>
        <developer>
            <name>Wassim Wazzi</name>
            <email>wassim.wazzi@mail.mcgill.ca</email>
            <organization>mcgill.ca</organization>
        </developer>
    </developers>

    <!-- legal -->
    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!-- this parent block lets this maven project extend a prepared spring specific template.-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.0.RELEASE</version>
    </parent>

    <!-- no dependencies to java libraries so far-->
    <dependencies>
        <!-- This block adds spring boot as a dependency, so we can use the parent pom configuration and non-standard annotations.-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.3.0.RELEASE</version>
        </dependency>
		<!-- To handle unit tests -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.7.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.mashape.unirest</groupId>
            <artifactId>unirest-java</artifactId>
            <version>1.4.9</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.9</version>
        </dependency>

        <!-- To handle graceful shutdown -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.19.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>2.19.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>eu.kartoffelquadrat</groupId>
            <artifactId>asyncrestlib</artifactId>
            <version>1.5.1</version>
        </dependency>
    </dependencies>
    <build>
        <!-- Override default name of generated jars -->
        <finalName>SplendorServer</finalName>

        <plugins>
            <!-- set compiler version -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <!-- Include parameter names so artifacts from this library are easier to access by reflection-->
                    <fork>true</fork>
                    <compilerArgs>
                        <arg>-parameters</arg>
                        <arg>-g:source,lines,vars</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!-- add sources to JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Spring specific build plugin, produces self-contained JAR with default launcher
            class.-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                    <!-- Replace "zoo" by actual package name in next line! -->
                    <mainClass>splendor.controller.RestLauncher</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Enforce all Junit tests pass -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>

            <!-- Enforce pass of checkstyle (also refuses warnings) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <configLocation>google_checks.xml</configLocation>
                    <consoleOutput>true</consoleOutput>
                    <violationSeverity>warning</violationSeverity>
                    <failOnViolation>true</failOnViolation>
                    <failsOnError>true</failsOnError>
                    <linkXRef>false</linkXRef>
                </configuration>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Add documentation to produced JAR and to docs directory for github pages-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
                    <reportOutputDirectory>${project.reporting.outputDirectory}/docs
                    </reportOutputDirectory>
                    <destDir>docs</destDir>
                    <tags>
                        <tag>
                            <name>Author</name>
                            <placement>a</placement>
                            <head>Author:</head>
                        </tag>
                        <tag>
                            <name>pre</name>
                            <placement>a</placement>
                            <head>Precondition:</head>
                        </tag>
                        <tag>
                            <name>post</name>
                            <placement>a</placement>
                            <head>Postcondition:</head>
                        </tag>
                        <tag>
                            <name>Date</name>
                            <placement>a</placement>
                            <head>Date:</head>
                        </tag>
                    </tags>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.6</version>
                <executions>
                    <!--first execution : for preparing JaCoCo runtime agent-->
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <!--second execution : for creating code coverage reports-->
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!--dev profile is intended for native deployment of Xox.-->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
                <activatedProperties>dev</activatedProperties>
                <packaging.type>jar</packaging.type>
            </properties>
        </profile>
        <!--prod profile is intended for dockerized deployment of Splendor .-->
        <profile>
            <id>prod</id>
            <properties>
                <spring.profiles.active>prod</spring.profiles.active>
                <activatedProperties>prod</activatedProperties>
                <packaging.type>jar</packaging.type>
            </properties>
        </profile>
    </profiles>
</project>
